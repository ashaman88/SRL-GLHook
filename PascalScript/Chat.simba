Function GLH_LoggedIn: Boolean; Forward;

Function GLH_SetChat(State: GLE_ChatState; Chat: Integer): Boolean;
var
  P: TPoint;
  Area: TBox;
  Fonts: TFontArray;
  Text: TStringArray;
  Chats: TTextInfoArray;
  BoxOffset, Colour: Integer;
Begin
  If (Not InRange(Chat, CHAT_GAME, CHAT_ASSIST)) Then
  Begin
    Srl_Warn('GLH_SetChat', 'Chat(' + IntToStr(Chat) + ') Does Not Exist.', Warn_AllVersions);
    Exit;
  End;

  Result := False;
  BoxOffset := (Chat + 1) * 57;
  Area := IntToBox(2 + BoxOffset, 530, 59 + BoxOffset, 552);
  Fonts := GLHook_GetFontsByArea(Area);
  Chats := GLHook_FontsToTextEx(Fonts, True, 4, 10);
  If (Length(Chats) < 1) Then Exit;

  Case State Of
    GLE_ChatState_Off:                            Begin Colour := 255;      Text := ['Off']; End;
    GLE_ChatState_Hide:                           Begin Colour := 16777215; Text := ['Hide']; End;
    GLE_ChatState_All, GLE_ChatState_On:          Begin Colour := 65280;    Text := ['All', 'On']; End;
    GLE_ChatState_Friends, GLE_ChatState_Filter:  Begin Colour := 65535;    Text := ['Friends', 'Filter']; End;
    GLE_ChatState_XP:                             Begin Colour := 0;        Text := ['XP', 'Earned']; End;
  End;

  If (Chats[1].Colour <> Colour) Then
  Begin
    P := MiddleBox(Area);
    GLHook_ShowNavBar;
    Mouse(P.X, P.Y, 10, 10, MOUSE_RIGHT);
    GLHook_HideNavBar;
    Result := GLH_WaitOptionMulti(Text, 1000);
  End Else
    Result := True;
End;

Procedure GLH_SetAllChats(GameChat, PublicChat, PrivateChat, FriendsChat, ClanChat, TradeChat, AssistChat: GLE_ChatState);
var
  I: Integer;
  States: GLE_ChatState_Array;
Begin
  If (Not GLH_LoggedIn) Then Exit;
  States := [GameChat, PublicChat, PrivateChat, FriendsChat, ClanChat, TradeChat, AssistChat];

  For I := 0 To High(States) Do
  Begin
    If (States[I] = GLE_ChatState_None) Then Continue;
    GLH_SetChat(States[I], I);
  End;
End;

Procedure GLH_ChatsOff;
var
  I: Integer;
Begin
  For I := 1 To 6 Do
    GLH_SetChat(GLE_ChatState_Off, I);
End;

Function GLH_ClickContinueEx(Click, Wait: Boolean): Boolean;
var
  I: Integer;
  Fonts: TFontArray;
  TextInfo: TTextInfoArray;
Begin
  Fonts := GLHook_GetFontsByArea(IntToBox(MCX1, MCY1, MCX2, MCY2));
  TextInfo := GLHook_FontsToTextEx(Fonts, False, 4, 10);
  If (Length(TextInfo) < 1) Then
    Exit;

  For I := 0 To High(TextInfo) Do
  Begin
    Result := SimilarColors(TextInfo[I].Colour, 13158600, 10) And ExecRegExpr('here to conti', TextInfo[I].Text);
    If (Result And Click) Then
    Begin
      GLHook_ShowNavBar;
      Mouse(TextInfo[I].Area.X1 + RandomRange(0, 90), TextInfo[I].Area.Y1 + RandomRange(28, 32), 2, 1, True);
      GLHook_HideNavBar;
      If Wait Then ChatWait;
    End;
    If Result Then Break;
  End;
End;

Function GLH_ClickContinue(SpaceBar, DoWait: Boolean): Boolean;
Begin
End;

Function GLH_GetChatBoxTextEx(LineNumber, Colour: Integer): String;
var
  P: TPoint;
  Bounds: TBox;
  Fonts: TFontArray;
  TextInfo: TTextInfoArray;
Begin
  P := TextCoords(LineNumber);
  Bounds := IntToBox(MCX1, P.Y, MCX2, P.Y + 13);
  Fonts := GLHook_GetFontsByArea(Bounds);
  TextInfo := GLHook_FontsToTextEx(Fonts, False, 4, 10);
  If ((Length(TextInfo) > 0) And (TextInfo[0].Colour = Colour)) Then Result := TextInfo[0].Text;
End;

Function GLH_GetChatBoxText(LineNumber: Integer): String;
var
  P: TPoint;
  Bounds: TBox;
  Fonts: TFontArray;
  Text: TStringArray;
Begin
  P := TextCoords(LineNumber);
  Bounds := IntToBox(MCX1, P.Y, MCX2, P.Y + 13);
  Fonts := GLHook_GetFontsByArea(Bounds);
  Text := GLHook_FontsToText(Fonts, False, 4, 10);
  If (Length(Text) > 0) Then Result := Text[0];
End;

Function GLH_FindChatBoxText(Text: String; LineNumber: Integer): Boolean;
Begin
  Result := (Pos(Text, GLH_GetChatBoxText(LineNumber)) > 0);
End;

Function GLH_IsChatBoxTextBetween(Text: String; StartLine, EndLine: Integer): Boolean;
var
  I: Integer;
Begin
  Result := True;
  For I := Max(StartLine, EndLine) Downto Min(StartLine, EndLine) Do
    If GLH_FindChatBoxText(Text, I) then
      Exit;
  Result := False;
End;

Function GLH_IsChatBoxTextAnyLine(Text: String): Boolean;
Begin
  Result := GLH_IsChatBoxTextBetween(Text, 1, 8);
End;

Function GLH_ChatBoxTextArray: TStringArray;
var
  Fonts: TFontArray;
Begin
  Fonts := GLHook_GetFontsByArea(IntToBox(MCX1, MCY1, MCX2, MCY2 - 13));
  Result := GLHook_FontsToText(Fonts, False, 4, 10);
End;

Function GLH_GetBlackChatMessage: String;
Begin
  Result := GLH_GetChatBoxText(8);
End;

Function GLH_FindBlackChatMessage(ChatMessage: String): Boolean;
Begin
  Result := (Pos(ChatMessage, GLH_GetChatBoxText(8)) > 0);
End;

Function GLH_LastChatter(var Name: String): Boolean;
var
  I: Integer;
Begin
  Name := LowerCase(GLH_GetBlackChatMessage);
  I := Pos(':', Name);
  If (I <> 0) Then
  Begin
    Name := Copy(Name, 0, I - 1);
    Result := True;
  End;
End;

Function GLH_GetLastChatText(var Chat: String): Boolean;
var
  I, L: Integer;
Begin
  Chat := GLH_GetBlackChatMessage;
  I := Pos(':', Chat) + 1; L := Length(Chat);
  Chat := Copy(Chat, I, L - I);
  Result := (L > 0);
End;

Function GLH_GetNPCChatName: String;
var
  Fonts: TFontArray;
  TextInfo: TTextInfoArray;
Begin
  Fonts := GLHook_GetFontsByArea(IntToBox(152, 345, 366, 370));
  TextInfo := GLHook_FontsToTextEx(Fonts, False, 4, 10);
  If ((Length(TextInfo) > 0) And (TextInfo[0].Colour = 7913190)) Then
    Result := TextInfo[0].Text;
End;

Function GLH_IsNPCTalking: Boolean;
Begin
  Result := (Length(GLH_GetNPCChatName) > 0);
End;
